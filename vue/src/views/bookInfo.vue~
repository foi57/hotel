<script setup>

import Heard from "../components/heard.vue";
import book from "../api/book.js";
import { ref, onMounted } from "vue";
import {ElMessage} from "element-plus";

const orders = ref([]); // 用于存储订单信息
const getCurrentTime = () => {
  return new Date();
}
onMounted(async () => {
  try {
    const response = await book.showBook();
    orders.value = response.data; // 假设 response 是订单数组
    console.log(orders.value);
  } catch (error) {
    console.error("Error fetching orders:", error);
  }
});
const canChargeBack = (timeStart) => {
  const currentTime = getCurrentTime();
  const orderTimeStart = new Date(timeStart);
  const timeDifference = orderTimeStart - currentTime;
  const hoursDifference = timeDifference / (1000 * 60 * 60);
  return hoursDifference >=48
}
const chargeBacks = (order) => {
  if (canChargeBack(order.timeStart)) {
    book.UpdateStateBook(order.id, "已退单");
    ElMessage.success("退单成功");
  } else {
    ElMessage.error("入住前48小时不能退单");
  }
  console.log("退单");
}
</script>

<template>
  <heard></heard>
  <div class="order-list">
    <h2>订单信息</h2>
    <div v-if="orders.length === 0">暂无订单信息</div>
    <div v-else>
      <div v-for="order in orders" :key="order.id" class="order-item">
        <h3>{{ order.name }}</h3>
        <p>房间名: {{ order.room_name }}</p>
        <p>入住时间: {{ order.timeStart }}</p>
        <p>离店时间: {{ order.timeEnd }}</p>
        <p>预计到店时间: {{ order.arrivalTime }}</p>
        <p>房间数量: {{ order.room_count }}</p>
        <p>价格: {{ order.price }} 元</p>
        <p>订单时间: {{ order.bookTime }}</p>
        <p>订单状态: {{ order.state }}</p>
        <hr />
        <p v-if="canChargeBack(order.timeStart)"><el-button @click="chargeBacks(order)">退单</el-button></p>
      </div>
    </div>
  </div>
</template>

<style scoped>
.order-list {
  padding: 20px;
}
.order-item {
  margin-bottom: 20px;
  border: 1px solid #ccc;
  padding: 10px;
}
</style>
